#Install packages if you don't have them already
#install.packages("tidyverse")
#install.packages("tidytext")
#install.packages("quanteda")
#install.packages("readtext")
#install.packages("DT")
library(tidyverse)
library(tidytext)
library(quanteda)
library(readtext)
library(DT)
harris_articles_df <- read.csv("kharris_extracted_text_jan2025.csv")
# Install and load required packages
if (!require(udpipe)) install.packages("udpipe")
if (!require(dplyr)) install.packages("dplyr")
library(udpipe)
library(dplyr)
# Download and load the English language model (only need to do this once)
udmodel <- udpipe_download_model(language = "english")
udmodel <- udpipe_load_model(udmodel$file_model)
names(harris_articles_df)
# Process the text and extract adjectives
# This will create a data frame with POS tags
annotated_text <- udpipe_annotate(udmodel, x = harris_articles_df$sentence, doc_id = harris_articles_df$filename)
annotated_df <- as.data.frame(annotated_text)
# Filter for adjectives (upos = "ADJ") and count frequencies
adjective_counts <- annotated_df %>%
filter(upos == "ADJ") %>%
group_by(token) %>%
summarise(
frequency = n(),
articles = n_distinct(doc_id)
) %>%
arrange(desc(frequency))
# View the top 20 most frequent adjectives
head(adjective_counts, 20)
# Optional: Save results to CSV
#write.csv(adjective_counts, "adjective_frequencies.csv", row.names = FALSE)
# Filter for adjectives (upos = "ADJ") and count frequencies
adjective_counts <- annotated_df %>%
filter(upos == "ADJ") %>%
group_by(token) %>%
summarise(
frequency = n(),
articles = n_distinct(doc_id)
) %>%
arrange(desc(frequency))
# View the top 20 most frequent adjectives
head(adjective_counts, 20)
datatable(adjective_counts,
caption = "Top adjectives in Harris DW coverage",
options = list(pageLength = 50))
# Optional: Save results to CSV
#write.csv(adjective_counts, "adjective_frequencies.csv", row.names = FALSE)
names(annotated_df)
# We'll look for adjectives (amod relationship) modifying nouns
adj_noun_pairs <- annotated_df %>%
# Join the dataframe with itself to connect adjectives to their head words
inner_join(
annotated_df %>% select(doc_id, sentence_id, token, id, upos),
by = c("doc_id", "sentence_id", "head_token_id" = "id")
) %>%
# Filter for adjectives modifying nouns
filter(
dep_rel == "amod" &  # amod = adjectival modifier
upos.x == "ADJ" &    # first token is adjective
upos.y == "NOUN"     # head word is noun
) %>%
# Select and rename relevant columns
select(
article_id = doc_id,
sentence_id,
adjective = token.x,
noun = token.y
)
adj_noun_pairs <- annotated_df %>%
# Join the dataframe with itself to connect adjectives to their head words
inner_join(
annotated_df %>% select(doc_id, sentence_id, token, token_id, upos),
by = c("doc_id", "sentence_id", "head_token_id" = "token_id")
) %>%
# Filter for adjectives modifying nouns
filter(
dep_rel == "amod" &    # amod = adjectival modifier
upos.x == "ADJ" &      # first token is adjective
upos.y == "NOUN"       # head word is noun
) %>%
# Select and rename relevant columns
select(
article_id = doc_id,
sentence_id,
adjective = token.x,
noun = token.y
)
# Count frequencies of adjective-noun pairs
adj_noun_counts <- adj_noun_pairs %>%
group_by(adjective, noun) %>%
summarise(
frequency = n(),
articles = n_distinct(article_id)
) %>%
arrange(desc(frequency))
datatable(adj_noun_counts,
caption = "Top adjectives-noun pairs in Harris DW coverage",
options = list(pageLength = 50))
