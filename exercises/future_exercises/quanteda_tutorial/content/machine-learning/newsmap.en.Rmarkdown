---
title: Newsmap
weight: 60
draft: false
---

Newsmap is a semi-supervised model for geographical document classification. While (full) supervised models are trained on manually classified data, this semi-supervised model learns from "seed words" in dictionaries. 

Install the **newsmap** package from CRAN.

```{r eval=FALSE}
install.packages("newsmap")
```

```{r message=FALSE}
require(quanteda)
require(quanteda.corpora)
require(newsmap)
require(maps)
require(ggplot2)
```

Download a corpus with news articles using **quanteda.corpora**'s `download()` function.

```{r eval=FALSE}
corp_news <- download(url = "https://www.dropbox.com/s/r8zhsu8zvjzhnml/data_corpus_yahoonews.rds?dl=1")
```

```{r include=FALSE}
# This code is only for website generation
corp_news <- readRDS("../data/data_corpus_yahoonews.rds")
```

`corp_news` contains 10,000 news summaries downloaded from Yahoo News in 2014.

```{r}
ndoc(corp_news)
range(corp_news$date)
```

Proper nouns are the most useful features of documents for geographical classification. However, not all capitalized words are proper nouns, so we define custom stopwords.

```{r}
month <- c("January", "February", "March", "April", "May", "June",
           "July", "August", "September", "October", "November", "December")
day <- c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday")
agency <- c("AP", "AFP", "Reuters")
```

```{r}
toks_news <- tokens(corp_news, remove_punct = TRUE) %>% 
             tokens_remove(pattern = c(stopwords("en"), month, day, agency), 
                           valuetype = "fixed", padding = TRUE)
```

**newsmap** contains [seed geographical dictionaries](https://github.com/koheiw/newsmap/tree/master/dict) in English, German, Spanish, Japanese and Russian languages. `data_dictionary_newsmap_en` is the seed dictionary for English texts.

```{r}
toks_label <- tokens_lookup(toks_news, dictionary = data_dictionary_newsmap_en, 
                            levels = 3) # level 3 is countries
dfmat_label <- dfm(toks_label, tolower = FALSE)

dfmat_feat <- dfm(toks_news, tolower = FALSE)
dfmat_feat_select <- dfm_select(dfmat_feat, pattern = "^[A-Z][A-Za-z0-9]+", 
                                valuetype = "regex", case_insensitive = FALSE) %>% 
                     dfm_trim(min_termfreq = 10)

tmod_nm <- textmodel_newsmap(dfmat_feat_select, y = dfmat_label)
```

The seed dictionary contains only names of countries and capital cities, but the model additionally extracts features associated to the countries. These country codes are defined in [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).

```{r}
coef(tmod_nm, n = 15)[c("US", "GB", "FR", "BR", "JP")]
```

{{% notice tip %}}
Names of people, organizations and places are often multi-word expressions. To distinguish between "New York" and "York", for example, it is useful to compound tokens using `tokens_compound()` as explained in [Advanced Operations](../advanced-operations/compound-mutiword-expressions/).
{{% /notice %}}

You can predict the most strongly associated countries using `predict()` and count the frequency using `table()`. 

```{r}
pred_nm <- predict(tmod_nm)
head(pred_nm, 20)
```

Factor levels are set to obtain zero counts for countries that did not appear in the corpus.

```{r}
count <- sort(table(factor(pred_nm, levels = colnames(dfmat_label))), decreasing = TRUE)
head(count, 20)
```

You can visualise the distribution of global news attention using `geom_map()`.

```{r fig.height=5, fig.width=10}
dat_country <- as.data.frame(count, stringsAsFactors = FALSE)
colnames(dat_country) <- c("id", "frequency")

world_map <- map_data(map = "world")
world_map$region <- iso.alpha(world_map$region) # convert country name to ISO code

ggplot(dat_country, aes(map_id = id)) +
      geom_map(aes(fill = frequency), map = world_map) +
      expand_limits(x = world_map$long, y = world_map$lat) +
      scale_fill_continuous(name = "Frequency") +
      theme_void() +
      coord_fixed()
```

{{% notice ref %}}
- Watanabe, Kohei. 2018. "[Newsmap: A Semi-supervised Approach to Geographical News Classification](https://www.tandfonline.com/doi/abs/10.1080/21670811.2017.1293487)". _Digital Journalism_ 6(3): 294-309.
{{% /notice %}}
